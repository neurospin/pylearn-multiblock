# This file is automatically generated by generate_todo.py

./parsimony/algorithms.py:
-------------------------
33: #TODO: This depends on the OS. We should try to be clever here ...

147: # TODO: Use module for this!

163: # TODO: Use module for this!

227: # TODO: Use module for this!

243: # TODO: Use module for this!

344: # TODO: We should use a step size here instead of the
345: # Lipschitz constant. All functions don't have L, but will
346: # still run in FISTA with a small enough step size.
347: # Updated: Use GradientStep instead!!

509: # TODO: Warn if G_new < 0.

774: for it in xrange(10):  # TODO: Get number of iterations!

./parsimony/functions.py:
------------------------
121: # TODO: We need a superclass for NesterovFunction wrappers.

912: # TODO: Instead of p, this should really be the number of non-zero
913: # rows of A.

923: # TODO: Add max_iter here!

1387: self._p = Atv[0].shape[1]  # WARNING: Number of rows may differ from p.

1397: # TODO: Is reset still necessary?

1442: # TODO: Instead of p, this should really be the number of non-zero
1443: # rows of A.

1459: # TODO: Add max_iter here!!

1644: # TODO: Use max_iter here!!

1672: # TODO: Kernelise this function! See how I did in LRL2_L1_TV._beta_hat.

1711: # TODO: Add this function!

1813: # TODO: Check instead if it is a numpy array.

1870: return 0.01  # TODO: Fix this!! Add backtracking?
./parsimony/estimators.py:
-------------------------
63: # TODO: Is this a good name?

207: # TODO: Should we use a seed here so that we get deterministic results?

./parsimony/datasets/samples_generator_struct.py:
------------------------------------------------
9: # TODO: Remove dependence on scikit learn.

./parsimony/datasets/simulated/grad.py:
--------------------------------------
104: # TODO: Only works for up to 3 dimensions ...

./parsimony/utils/consts.py:
---------------------------
14: # TODO: MAX_ITER is heavily algorithm-dependent, so we have to think about if
15: # we should include a package-wide maximum at all.

./parsimony/tv/__init__.py:
--------------------------
10: # TODO: Remove relative imports.

