# This file is automatically generated by generate_todo.py.
# Files that start with an underscore ("_") have been excluded.

./parsimony/estimators.py:
-------------------------
65: # TODO: Is this a good name?

267: # TODO: Should we use a seed here so that we get deterministic results?

356: # TODO: Should we use a seed here so that we get deterministic results?

./parsimony/algorithms/explicit.py:
----------------------------------
187: # TODO: We should use a step size here instead of the
188: # Lipschitz constant. All functions don't have L, but will
189: # still run in FISTA with a small enough step size.
190: # Updated: Use StepSize instead!!
191: # interfaces.LipschitzContinuousGradient,

234: # TODO: Change the functions so that we can use the StepSize API here.

360: # TODO: We should use a step size here instead of the
361: # Lipschitz constant. All functions don't have L, but will
362: # still run in FISTA with a small enough step size.
363: # Updated: Use StepSize instead!!
364: #                  interfaces.LipschitzContinuousGradient,

391: # TODO: Change the functions so that we can use the StepSize API here.

503: # TODO: Use StepSize instead.

521: # TODO: Use StepSize instead.

551: # TODO: Warn if G_new < 0.

1049: # TODO: Does the weights really matter when the function is the
1050: # indicator function?

./parsimony/algorithms/implicit.py:
----------------------------------
110: # TODO: Use module for this!
111: #            t = np.random.rand(X.shape[0], 1)

126: # TODO: Use module for this!
127: #            v = np.random.rand(X.shape[1], 1)
128: #            v /= maths.norm(v)

188: # TODO: Use module for this!

204: # TODO: Use module for this!

./parsimony/algorithms/multiblock.py:
------------------------------------
114: for it in xrange(self.outer_iter):  # TODO: Get number of iterations!

./parsimony/utils/utils.py:
--------------------------
20: #TODO: This depends on the OS. We should try to be clever here ...

./parsimony/utils/consts.py:
---------------------------
15: # TODO: MAX_ITER is heavily algorithm-dependent, so we have to think about if
16: # we should include a package-wide maximum at all.

./parsimony/datasets/samples_generator_struct.py:
------------------------------------------------
9: # TODO: Remove dependence on scikit learn.

112: # TODO: This is wrong. Shape should be Z, Y, X.

./parsimony/functions/interfaces.py:
-----------------------------------
93: # TODO: Should all constraints have the projection operator?

175: # TODO: This should be in the NesterovFunction interface, right?

./parsimony/functions/losses.py:
-------------------------------
308: # TODO: Make the weights sparse.
309: #weights = np.eye(self.X.shape[0])

311: # TODO: Allow the weight vector to be a list.

383: PWX = 0.5 * np.sqrt(self.weights) * self.X  # TODO: CHECK WITH FOUAD
384: # PW = 0.5 * np.eye(self.X.shape[0]) ## miss np.sqrt(self.W)
385: #PW = 0.5 * np.sqrt(self.W)
386: #PWX = np.dot(PW, self.X)
387: # TODO: Use FastSVD for speedup!

389: self._lipschitz = np.max(s) ** 2.0 + self.k  # TODO: CHECK

./parsimony/functions/penalties.py:
----------------------------------
648: # TODO: Tweak these magic numbers on real data. Or even better,
649: # find theoretical bounds. Convergence is faster if these bounds
650: # are close to accurate when we start the bisection algorithm.

765: # TODO: Tweak these magic numbers on real data. Or even better,
766: # find theoretical bounds. Convergence is faster if these bounds
767: # are close to accurate when we start the bisection algorithm.

./parsimony/functions/functions.py:
----------------------------------
102: # TODO: We currently only allow one proximal operator. Fix this!

155: # TODO: We currently only allow one proximal operator. Fix this!

583: # TODO: This is not good. Solve this better!

868: # TODO: This is not good. Solve this better!

917: # TODO: Use max_iter here!!

960: # TODO: Kernelise this function! See how I did in RR_L1_TV._beta_hat.

1002: # TODO: Add this function or refactor API!

./parsimony/functions/_objectives/functions.py:
----------------------------------------------
555: # TODO: This is not good. Solve this better!

840: # TODO: This is not good. Solve this better!

889: # TODO: Use max_iter here!!

932: # TODO: Kernelise this function! See how I did in RR_L1_TV._beta_hat.

974: # TODO: Add this function or refactor API!

./parsimony/functions/multiblock/losses.py:
------------------------------------------
141: # TODO: Check instead if it is a numpy array.

./parsimony/functions/nesterov/L1TV.py:
--------------------------------------
55: # WARNING: Number of non-zero rows may differ from p.

140: # TODO: Instead of p, this should really be the number of non-zero
141: # rows of A.

152: # TODO: Add max_iter here!!

./parsimony/functions/nesterov/tv.py:
------------------------------------
147: # TODO: Instead of p, this should really be the number of non-zero
148: # rows of A.

158: # TODO: Add max_iter here!

./parsimony/tests/tests.py:
--------------------------
70: # TODO: Is there a better way to do this?

./parsimony/tests/test_algorithms.py:
------------------------------------
31: # WARNING: We must have a non-zero ridge parameter!

34: # WARNING: We must have a non-zero TV parameter!

./parsimony/tests/spamsdata.py:
------------------------------
71: # TODO: Don't use print directly.

