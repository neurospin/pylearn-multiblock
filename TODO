# This file is automatically generated by generate_todo.py

./parsimony/algorithms.py:
-------------------------
33: #TODO: This depends on the OS. We should try to be clever here ...

120: # TODO: Use module for this!

136: # TODO: Use module for this!

175: # TODO: Use module for this!

191: # TODO: Use module for this!

353: # TODO: Warn if G_new < 0.

./parsimony/functions.py:
------------------------
95: # TODO: We need a superclass for NesterovFunction wrappers.

677: # TODO: Instead of p, this should really be the number of non-zero
678: # rows of A.

688: # TODO: Add max_iter here!

1112: self._p = Atv[0].shape[1]  # WARNING: Number of rows may differ from p.

1122: # TODO: Is reset still necessary?

1167: # TODO: Instead of p, this should really be the number of non-zero
1168: # rows of A.

1184: # TODO: Add max_iter here!!

1347: # TODO: Use max_iter here!!

1375: # TODO: Kernelise this function! See how I did in LRL2_L1_TV._beta_hat.

1414: # TODO: Add this function!

./parsimony/estimators.py:
-------------------------
52: # TODO: Is this a good name?

158: # TODO: Should we use a seed here so that we get deterministic results?

./parsimony/datasets/samples_generator_struct.py:
------------------------------------------------
9: # TODO: Remove dependence on scikit learn.

556: # TODO: We cannot return the A matrices separately like this, we must
557: # return a list or tuple A such that A = [Ax, Ay, Az].

./parsimony/datasets/simulated/grad.py:
--------------------------------------
74: # TODO: Only works for up to 3 dimensions ...

./parsimony/utils/consts.py:
---------------------------
14: # TODO: MAX_ITER is heavily algorithm-dependent, so we have to think about if
15: # we should include a package-wide maximum at all.

./parsimony/tv/__init__.py:
--------------------------
10: # TODO: Remove relative imports.

