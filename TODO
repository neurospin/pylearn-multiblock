# This file is automatically generated by generate_todo.py.
# Files that start with an underscore ("_") have been excluded.

./parsimony/estimators.py:
-------------------------
64: # TODO: Is this a good name?

264: # TODO: Should we use a seed here so that we get deterministic results?

350: # TODO: Should we use a seed here so that we get deterministic results?

./parsimony/algorithms.py:
-------------------------
40: #TODO: This depends on the OS. We should try to be clever here ...

154: # TODO: Use module for this!

170: # TODO: Use module for this!

234: # TODO: Use module for this!

250: # TODO: Use module for this!

346: # TODO: We should use a step size here instead of the
347: # Lipschitz constant. All functions don't have L, but will
348: # still run in FISTA with a small enough step size.
349: # Updated: Use StepSise instead!!

492: # TODO: We should use a step size here instead of the
493: # Lipschitz constant. All functions don't have L, but will
494: # still run in FISTA with a small enough step size.
495: # Updated: Use StepSize instead!!

657: # TODO: Warn if G_new < 0.

902: # TODO: Include min_iter!

994: for it in xrange(self.outer_iter):  # TODO: Get number of iterations!

./parsimony/utils/consts.py:
---------------------------
14: # TODO: MAX_ITER is heavily algorithm-dependent, so we have to think about if
15: # we should include a package-wide maximum at all.

./parsimony/datasets/samples_generator_struct.py:
------------------------------------------------
9: # TODO: Remove dependence on scikit learn.

./parsimony/functions/objectives.py:
-----------------------------------
149: # TODO: Make the weights sparse.
150: #weights = np.eye(self.X.shape[0])

206: PWX = 0.5 * np.sqrt(self.weights) * self.X  # TODO: CHECK WITH FOUAD
207: # PW = 0.5 * np.eye(self.X.shape[0]) ## miss np.sqrt(self.W)
208: #PW = 0.5 * np.sqrt(self.W)
209: #PWX = np.dot(PW, self.X)
210: # TODO: Use FastSVD for speedup!

212: self.lipschitz = np.max(s) ** 2.0 + self.k  # TODO: CHECK

./parsimony/functions/multiblock/objectives.py:
----------------------------------------------
142: # TODO: Check instead if it is a numpy array.

./parsimony/functions/nesterov/interfaces.py:
--------------------------------------------
21: # TODO: We need a superclass for NesterovFunction wrappers.

./parsimony/functions/nesterov/L1.py:
------------------------------------
163: self._p = Atv[0].shape[1]  # WARNING: Number of rows may differ from p.

173: # TODO: Is reset still necessary?

218: # TODO: Instead of p, this should really be the number of non-zero
219: # rows of A.

235: # TODO: Add max_iter here!!

./parsimony/functions/nesterov/L1TV.py:
--------------------------------------
52: self._p = Atv[0].shape[1]  # WARNING: Number of rows may differ from p.

62: # TODO: Is reset still necessary?

107: # TODO: Instead of p, this should really be the number of non-zero
108: # rows of A.

124: # TODO: Add max_iter here!!

./parsimony/functions/nesterov/tv.py:
------------------------------------
120: # TODO: Instead of p, this should really be the number of non-zero
121: # rows of A.

131: # TODO: Add max_iter here!

./parsimony/functions/functions/functions.py:
--------------------------------------------
704: # TODO: Use max_iter here!!

732: # TODO: Kernelise this function! See how I did in LRL2_L1_TV._beta_hat.

771: # TODO: Add this function!

