# This file is automatically generated by generate_todo.py

./parsimony/functions.py:
------------------------
181: # TODO: We need a superclass for NesterovFunction wrappers.

647: # TODO: Make the weights sparse.
648: #weights = np.eye(self.X.shape[0])

709: # TODO: Use FastSVD for speedup!

1148: # TODO: Instead of p, this should really be the number of non-zero
1149: # rows of A.

1159: # TODO: Add max_iter here!

1981: self._p = Atv[0].shape[1]  # WARNING: Number of rows may differ from p.

1991: # TODO: Is reset still necessary?

2036: # TODO: Instead of p, this should really be the number of non-zero
2037: # rows of A.

2053: # TODO: Add max_iter here!!

2238: # TODO: Use max_iter here!!

2266: # TODO: Kernelise this function! See how I did in LRL2_L1_TV._beta_hat.

2305: # TODO: Add this function!

2450: # TODO: Check instead if it is a numpy array.

./parsimony/estimators.py:
-------------------------
64: # TODO: Is this a good name?

264: # TODO: Should we use a seed here so that we get deterministic results?

350: # TODO: Should we use a seed here so that we get deterministic results?

./parsimony/algorithms.py:
-------------------------
35: #TODO: This depends on the OS. We should try to be clever here ...

149: # TODO: Use module for this!

165: # TODO: Use module for this!

229: # TODO: Use module for this!

245: # TODO: Use module for this!

341: # TODO: We should use a step size here instead of the
342: # Lipschitz constant. All functions don't have L, but will
343: # still run in FISTA with a small enough step size.
344: # Updated: Use GradientStep instead!!

486: # TODO: We should use a step size here instead of the
487: # Lipschitz constant. All functions don't have L, but will
488: # still run in FISTA with a small enough step size.
489: # Updated: Use GradientStep instead!!

651: # TODO: Warn if G_new < 0.

896: # TODO: Include min_iter!

988: for it in xrange(self.outer_iter):  # TODO: Get number of iterations!
989: #            all_converged = True

./parsimony/tv/__init__.py:
--------------------------
10: # TODO: Remove relative imports.

./parsimony/utils/consts.py:
---------------------------
14: # TODO: MAX_ITER is heavily algorithm-dependent, so we have to think about if
15: # we should include a package-wide maximum at all.

./parsimony/datasets/samples_generator_struct.py:
------------------------------------------------
9: # TODO: Remove dependence on scikit learn.

./parsimony/datasets/simulated/grad.py:
--------------------------------------
88: # TODO: Only works for up to 3 dimensions ...

