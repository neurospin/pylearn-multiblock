# This file is automatically generated by generate_todo.py

./parsimony/algorithms.py:
-------------------------
26: #TODO: This depends on the OS. We should try to be clever here ...
27: #time_func = time

113: # TODO: Use module for this!

129: # TODO: Use module for this!

168: # TODO: Use module for this!

184: # TODO: Use module for this!

346: # TODO: Warn if G_new < 0.

./parsimony/functions.py:
------------------------
98: # TODO: We need a superclass for NesterovFunction wrappers.

680: # TODO: Instead of p, this should really be the number of non-zero
681: # rows of A.

691: # TODO: Add max_iter here!

1125: # TODO: Is reset still necessary?

1170: # TODO: Instead of p, this should really be the number of non-zero
1171: # rows of A.

1187: # TODO: Add max_iter here!!

1350: # TODO: Use max_iter here!!

1378: # TODO: Kernelise this function! See how I did in LRL2_L1_TV._beta_hat.

1417: # TODO: Add this function!

./parsimony/estimators.py:
-------------------------
51: # TODO: Is this a good name?

122: # TODO: Should we use a seed here so that we get deterministic results?

./parsimony/datasets/samples_generator_struct.py:
------------------------------------------------
529: # TODO: We cannot return the A matrices separately like this, we must
530: # return a list or tuple A such that A = [Ax, Ay, Az].

./parsimony/datasets/simulated/grad.py:
--------------------------------------
74: # TODO: Only works for up to 3 dimensions ...

./parsimony/utils/consts.py:
---------------------------
14: # TODO: MAX_ITER is heavily algorithm-dependent, so we have to think about if
15: # we should include a package-wide maximum at all.

